package org.me.memory;

import javax.jws.Oneway;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by the JAX-WS RI. JAX-WS RI 2.2.10-b140803.1500
 * Generated source version: 2.2
 *
 */
@WebService(name = "MemoryWS", targetNamespace = "http://memory.me.org/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface MemoryWS {

    /**
     *
     * @param password
     * @param username
     * @return returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "register", targetNamespace = "http://memory.me.org/", className = "org.me.memory.Register")
    @ResponseWrapper(localName = "registerResponse", targetNamespace = "http://memory.me.org/", className = "org.me.memory.RegisterResponse")
    @Action(input = "http://memory.me.org/MemoryWS/registerRequest", output = "http://memory.me.org/MemoryWS/registerResponse")
    public String register(
            @WebParam(name = "username", targetNamespace = "") String username,
            @WebParam(name = "password", targetNamespace = "") String password);

    /**
     *
     * @param memory
     */
    @WebMethod
    @RequestWrapper(localName = "delete", targetNamespace = "http://memory.me.org/", className = "org.me.memory.Delete")
    @ResponseWrapper(localName = "deleteResponse", targetNamespace = "http://memory.me.org/", className = "org.me.memory.DeleteResponse")
    @Action(input = "http://memory.me.org/MemoryWS/deleteRequest", output = "http://memory.me.org/MemoryWS/deleteResponse")
    public void delete(
            @WebParam(name = "memory", targetNamespace = "") String memory);

    /**
     *
     * @return returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "test", targetNamespace = "http://memory.me.org/", className = "org.me.memory.Test")
    @ResponseWrapper(localName = "testResponse", targetNamespace = "http://memory.me.org/", className = "org.me.memory.TestResponse")
    @Action(input = "http://memory.me.org/MemoryWS/testRequest", output = "http://memory.me.org/MemoryWS/testResponse")
    public String test();

    /**
     *
     * @return returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getUser", targetNamespace = "http://memory.me.org/", className = "org.me.memory.GetUser")
    @ResponseWrapper(localName = "getUserResponse", targetNamespace = "http://memory.me.org/", className = "org.me.memory.GetUserResponse")
    @Action(input = "http://memory.me.org/MemoryWS/getUserRequest", output = "http://memory.me.org/MemoryWS/getUserResponse")
    public String getUser();

    /**
     *
     * @param memory
     * @param resource
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "addResource", targetNamespace = "http://memory.me.org/", className = "org.me.memory.AddResource")
    @Action(input = "http://memory.me.org/MemoryWS/addResource")
    public void addResource(
            @WebParam(name = "memory", targetNamespace = "") String memory,
            @WebParam(name = "resource", targetNamespace = "") String resource);

    /**
     *
     * @return returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "viewUsers", targetNamespace = "http://memory.me.org/", className = "org.me.memory.ViewUsers")
    @ResponseWrapper(localName = "viewUsersResponse", targetNamespace = "http://memory.me.org/", className = "org.me.memory.ViewUsersResponse")
    @Action(input = "http://memory.me.org/MemoryWS/viewUsersRequest", output = "http://memory.me.org/MemoryWS/viewUsersResponse")
    public String viewUsers();

    /**
     *
     * @return returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "viewMemories", targetNamespace = "http://memory.me.org/", className = "org.me.memory.ViewMemories")
    @ResponseWrapper(localName = "viewMemoriesResponse", targetNamespace = "http://memory.me.org/", className = "org.me.memory.ViewMemoriesResponse")
    @Action(input = "http://memory.me.org/MemoryWS/viewMemoriesRequest", output = "http://memory.me.org/MemoryWS/viewMemoriesResponse")
    public String viewMemories();

    /**
     *
     * @return returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "viewInviteSender", targetNamespace = "http://memory.me.org/", className = "org.me.memory.ViewInviteSender")
    @ResponseWrapper(localName = "viewInviteSenderResponse", targetNamespace = "http://memory.me.org/", className = "org.me.memory.ViewInviteSenderResponse")
    @Action(input = "http://memory.me.org/MemoryWS/viewInviteSenderRequest", output = "http://memory.me.org/MemoryWS/viewInviteSenderResponse")
    public String viewInviteSender();

    /**
     *
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "acceptInvite", targetNamespace = "http://memory.me.org/", className = "org.me.memory.AcceptInvite")
    @Action(input = "http://memory.me.org/MemoryWS/acceptInvite")
    public void acceptInvite();

    /**
     *
     * @param friendUsername
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "sendInvite", targetNamespace = "http://memory.me.org/", className = "org.me.memory.SendInvite")
    @Action(input = "http://memory.me.org/MemoryWS/sendInvite")
    public void sendInvite(
            @WebParam(name = "friendUsername", targetNamespace = "") String friendUsername);

    /**
     *
     * @return returns java.lang.Integer
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getUserID", targetNamespace = "http://memory.me.org/", className = "org.me.memory.GetUserID")
    @ResponseWrapper(localName = "getUserIDResponse", targetNamespace = "http://memory.me.org/", className = "org.me.memory.GetUserIDResponse")
    @Action(input = "http://memory.me.org/MemoryWS/getUserIDRequest", output = "http://memory.me.org/MemoryWS/getUserIDResponse")
    public Integer getUserID();

    /**
     *
     * @return returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "viewInvites", targetNamespace = "http://memory.me.org/", className = "org.me.memory.ViewInvites")
    @ResponseWrapper(localName = "viewInvitesResponse", targetNamespace = "http://memory.me.org/", className = "org.me.memory.ViewInvitesResponse")
    @Action(input = "http://memory.me.org/MemoryWS/viewInvitesRequest", output = "http://memory.me.org/MemoryWS/viewInvitesResponse")
    public boolean viewInvites();

    /**
     *
     * @param memory
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "addMemory", targetNamespace = "http://memory.me.org/", className = "org.me.memory.AddMemory")
    @Action(input = "http://memory.me.org/MemoryWS/addMemory")
    public void addMemory(
            @WebParam(name = "memory", targetNamespace = "") String memory);

    /**
     *
     * @param mypoints
     * @param username
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "transferPoints", targetNamespace = "http://memory.me.org/", className = "org.me.memory.TransferPoints")
    @Action(input = "http://memory.me.org/MemoryWS/transferPoints")
    public void transferPoints(
            @WebParam(name = "mypoints", targetNamespace = "") int mypoints,
            @WebParam(name = "username", targetNamespace = "") String username);

    /**
     *
     * @return returns java.lang.Integer
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "viewPoints", targetNamespace = "http://memory.me.org/", className = "org.me.memory.ViewPoints")
    @ResponseWrapper(localName = "viewPointsResponse", targetNamespace = "http://memory.me.org/", className = "org.me.memory.ViewPointsResponse")
    @Action(input = "http://memory.me.org/MemoryWS/viewPointsRequest", output = "http://memory.me.org/MemoryWS/viewPointsResponse")
    public Integer viewPoints();

    /**
     *
     * @param resource
     */
    @WebMethod
    @RequestWrapper(localName = "deleteResource", targetNamespace = "http://memory.me.org/", className = "org.me.memory.DeleteResource")
    @ResponseWrapper(localName = "deleteResourceResponse", targetNamespace = "http://memory.me.org/", className = "org.me.memory.DeleteResourceResponse")
    @Action(input = "http://memory.me.org/MemoryWS/deleteResourceRequest", output = "http://memory.me.org/MemoryWS/deleteResourceResponse")
    public void deleteResource(
            @WebParam(name = "resource", targetNamespace = "") String resource);

    /**
     *
     * @param memory
     * @param username
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "shareMemory", targetNamespace = "http://memory.me.org/", className = "org.me.memory.ShareMemory")
    @Action(input = "http://memory.me.org/MemoryWS/shareMemory")
    public void shareMemory(
            @WebParam(name = "memory", targetNamespace = "") String memory,
            @WebParam(name = "username", targetNamespace = "") String username);

    /**
     *
     * @param password
     * @param username
     * @return returns java.lang.Boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "login", targetNamespace = "http://memory.me.org/", className = "org.me.memory.Login")
    @ResponseWrapper(localName = "loginResponse", targetNamespace = "http://memory.me.org/", className = "org.me.memory.LoginResponse")
    @Action(input = "http://memory.me.org/MemoryWS/loginRequest", output = "http://memory.me.org/MemoryWS/loginResponse")
    public Boolean login(
            @WebParam(name = "username", targetNamespace = "") String username,
            @WebParam(name = "password", targetNamespace = "") String password);

}
